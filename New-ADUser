########## This Powershell script creates new Active-Directory users and their own shared folder ###########
# Created on : August 24, 2019
# Last modification : August 24, 2019
# Script revision : 1.0


# Defining a non-mandatory parameters which asks for the path of a csv file (which contains informations to create the new users) and for a default password for these users (this password will be change at first connexion.

Param(
    [Parameter(Mandatory=$false)]
    [string] $Fichier = $(Read-Host -prompt "CSV File (Press Enter to ignore) : "),
    [string] $Password = $(Read-Host -prompt "Password (Press Enter to ignore) : ")
)


# Creating a function which will ask for new mandatory parameters before creating a single user and its shared folder.

Function ManualUser {
    param(
        [Parameter(Mandatory=$true)]
        [string] $Firstname = $(Read-Host -prompt "Firstname : "),
        [string] $Lastname = $(Read-Host -prompt "Lastname : "),
        [string] $Password = $(Read-Host -prompt "Password : "),
        [string[]] $Groups = $(Read-Host -prompt "User's groups: "),
        [string] $Domain = $(Read-Host -prompt "Domain name (e.g. : domaine.com) : "),
        [string] $Departement = $(Read-Host -prompt "Departement : "),
        [string] $OU = $(Read-Host -prompt "OU (e.g. : OU=Administration,DC=domaine,DC=com) : ")
    )
    $Username = "$Firstname.$Lastname"
    try {
        New-ADUser -SamAccountName "$Username" -UserPrincipalName "$Username@$Domain" -Name "$Firstname $Lastname" -GivenName $Firstname -Surname $Lastname -Path $OU -Enabled $true -ChangePasswordAtLogon $true -AccountPassword (ConvertTo-SecureString $Password -AsPlainText -Force)
    }
    catch {
        .$Error
    }
    try {
        foreach ($Group in $Groups) {
            Add-ADPrincipalGroupMembership -Identity $Username -MemberOf $Group
        }
    }
    catch {
        .$Error
    }
    try {
        New-Item -Name $Username -ItemType directory
        Move-Item -Path .\$Username -Destination F:\$Departement
        New-SmbShare -Name $Username-$Departement -Path Z:\$Departement\$Username -FullAccess $Username
    }
    catch {
        .$Error
    }
    Write-Host "$Date : A new user $Username has been successfully created as well as its shared folder." -ForegroundColor Green
}


# Allowing the script to be executed and importing Active-Directory module in Powershell.

Set-ExecutionPolicy Unrestricted
Import-Module ActiveDirectory
Import-Module SmbShare


# Getting current datetime (i.e. : 31/07/2019 - 12:08).

$Date = Get-Date -Format "dd/MM/yyyy - HH:mm"


#Creating an exception catcher to save exceptions into a log file..

$Error = {
    $Exception = $_.Exception.GetType().fullname
    Write-Warning $_
    "$Date : Failed to create new user $Username : $_"|Add-Content C:\Users\$env:USERNAME\Documents\logs_3.txt
    $i = 1
}


# If the parameter -File has been used, then the script imports the csv file, extract its content, creates for each object (line) a new user, add it to a group and creates its own shared folder.
# Else, the function Manual-user is called to manually create one user.

if ($PSBoundParameters.ContainsKey('Fichier')) {
    try {
        $File = Import-csv $Fichier -Header "Lastname","Firstname","Site","PrimaryGroup","SecondaryGroup","Tel2","Mobile","Domain","Email" -Delimiter ',' | ForEach-Object {
            $Firstname = $_.Firstname
            $Lastname = $_.Lastname
            $City = $_.Site
            $Domain = $_.Domain
            $PrimaryGroup = $_.PrimaryGroup
            $SecondaryGroup = $_.SecondaryGroup
            $Tel = $_.Tel2
            $Mobile = $_.Mobile
            $Mail = $_.Email
            $Username = "$Firstname.$Lastname"
            $OU = "OU=$PrimaryGroup,DC=$Domain,DC=fr"
            Write-Host "Creating new user $Username in $Domain with the following details : working in $City, at $PrimaryGroup department. Phone number : $Tel2, mobile phone : $Mobile, email address : $Mail." -ForegroundColor DarkGray
            try {
                New-ADUser -SamAccountName $Username -UserPrincipalName "$Username@$Domain" -Name "$Firstname $Lastname" -GivenName $Firstname -Surname $Lastname -Enabled $true -ChangePasswordAtLogon $true -Path $OU -City $City -EmailAddress $Mail -OfficePhone $Tel -MobilePhone $Mobile -AccountPassword (ConvertTo-SecureString $Password -AsPlainText -Force)
                Write-Host "$Date : New user $Username has been successfully created." -ForegroundColor Green
            }
            catch {
                .$Error
            }
            try {
                Add-ADPrincipalGroupMembership -Identity $Username -MemberOf $PrimaryGroup
            }
            catch {
                .$Error
            }
            try {
                Add-ADPrincipalGroupMembership -Identity $Username -MemberOf $SecondaryGroup
            }
            catch {
                .$Error
            }
            if ((Test-Path "F:\$PrimaryGroup\$Username") -eq $false) {
                try {
                    New-Item -Name $Username -ItemType directory
                    Move-Item -Path .\$Username -Destination F:\$PrimaryGroup
                    New-SmbShare -Name $Username -Path F:\$PrimaryGroup\$Username -FullAccess $Username
                }
                catch {
                    .$Error
                }
            }
            else {
                Write-Warning "Shared name $Username already exists."
            }
        }
    }
    catch {
        .$Error
    }
}
else {
    try {
        ManualUser
    }
    catch {
        .$Error
    }
}


# End the script.

if ($i -eq 1) {
    exit(1)
    }
else {
    exit(0)
    }
